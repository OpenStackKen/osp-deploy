---

- name: Create Images Directory
  file:
    path: "/home/stack/images"
    state: directory
    owner: "stack"
    group: "stack" 
  tags:
    - images 

- name: Create directories
  file:
    path: "/home/stack/{{ item }}"
    state: directory
    owner: stack
    group: stack
  with_items:
    - scripts
    - utilities

- name: Copy images files locally
  unarchive:
    src: "/usr/share/rhosp-director-images/{{ item }}"
    dest: "/home/stack/images"
    remote_src: yes
  with_items:
    - "overcloud-full-latest-13.0.tar"
    - "ironic-python-agent-latest-13.0.tar"
  tags:
    - images

- name: Upload images
  shell: |
    source /home/stack/stackrc
    openstack overcloud image upload --image-path /home/stack/images/
  tags:
    - images

- name: Stat the instackenv.json file
  stat:
    path: "files/instackenv.json"
  register: instackenv
  delegate_to: localhost

- debug: var=instackenv

- name: Import and configure based on instackenv.json
  block:
    - copy: 
        src: files/instackenv.json
        dest: /home/stack/instackenv.json
        owner: "stack"
        group: "stack"
        remote_src: no
      tags:
        - nodes
    - shell: |
        source /home/stack/stackrc 
        openstack overcloud node import /home/stack/instackenv.json
      tags:
        - nodes
        - import_nodes
    - shell: |
        source /home/stack/stackrc
        openstack baremetal node list -f json 
      register: baremetal_nodes
      tags:
        - nodes
        - introspection
    - shell: |
        source /home/stack/stackrc
        openstack overcloud node introspect --all-manageable --provide
      when:
        - ( baremetal_nodes.stdout_lines | length ) == 0
      register: introspection_complete
  # - name: Introspect nodes
  #   shell: |
  #     source /home/stack/stackrc
  #     openstack overcloud node introspect {{ item.UUID }} --provide
  #   tags:
  #     - nodes
  #     - introspection 
  #   when: 
  #     - item['Provisioning State'] == 'manageable'
  #     - introspection_complete.skipped == True
  #   with_dict:
  #     - "{{ (baremetal_nodes.stdout | from_json) }}" 
  when:
     instackenv.stat.exists == True


- name: Update DNS setting for ctlplane-subnet
  shell: |
     source /home/stack/stackrc
     openstack subnet set --dns-nameserver {{ undercloud_name_servers | join( " --dns-nameserver " ) }} ctlplane-subnet
  ignore_errors: yes
  tags:
    - dns

- name: Get List of all flavors
  shell: | 
     source /home/stack/stackrc
     openstack flavor list -f value -c Name
  register: flavor_list 
  tags:
    - flavor_update 

- name: Update Flavors for uefi
  shell: | 
     source /home/stack/stackrc
     openstack flavor set --property capabilities:boot_mode='uefi' {{ item }}
  with_items:
    - "{{ flavor_list.stdout_lines }}"
  tags: 
    - flavor_update
  when: undercloud_uefi_flavors | bool   

- name: Install templates 
  block:
  - name: Copy over overcloud templates
    copy:
      src: "overcloud_templates/"
      dest: "/home/stack/templates"
 
  - name: Create any missing template directories
    file:
      path: "/home/stack/templates/{{ item.path }}"
      state: directory
    with_filetree: "templates"
    when:
      - item.state == 'directory'
  
  - name: Create templates
    template:
      src: "{{ item.src }}"
      dest: "/home/stack/templates/{{ item.path | regex_replace('.j2', '') }}"
    with_filetree: "templates"
    when:
      - item.state == 'file'
  tags:
  - overcloud
  - overcloud_templates

- name: Create image_prepare script
  template:
    src: scripts/image_prepare.sh.j2
    dest: /home/stack/scripts/image_prepare.sh
    mode: 0755
  tags: 
   - scripts

- name: Run image_prepare script
  shell: |
     /home/stack/scripts/image_prepare.sh

- name: Create deploy_overcloud.sh script
  template:
    src: scripts/deploy_overcloud.sh.j2
    dest: /home/stack/scripts/deploy_overcloud.sh
    mode: 0755
  tags:
   - scripts
